---
import { type GapValue, gapClasses } from "@utils/spacing";
import { Icon } from "astro-icon/components";
import Box from "@elements/Box.astro";

interface Props {
	Element?: keyof HTMLElementTagNameMap;
	class?: string;
	href: string;
	icon?: string;
	gap?: GapValue;
	align?: "horizontal" | "vertical";
	surface?: "primary" | "secondary" | "tertiary" ;
	size?: "small" | "medium" | "large";

	// ユーティリティ
	[key: string]: unknown;
}

const {
	class: className,
	Element = "a",
	href,
	icon,
	gap,
	align = "horizontal",
	surface = "tertiary",
	size = "medium",
	...rest
} = Astro.props as Props;


const convertSurface = (surface: Props["surface"]) => {
	switch (surface) {
		case "primary":
			return "accent";
		case "secondary":
			return "outlined";
		case "tertiary":
			return undefined;
		default:
			return surface;
	}
};

const classList = [
	"link",
	gapClasses(gap),
	align === "vertical" ? "vertical" : "horizontal",
	size,
	className,
];
---

<Box Element={Element} href={href} class:list={classList} surface={convertSurface(surface)} {...rest}>
	{icon && <Icon name={icon}  />}
	<slot />
</Box>


<style lang="scss">
	.link {
		display: grid;
		grid-gap: var(--gap);
		border-radius: var(--border-radius);

		// tertiary のホバー時
		&:hover {
			--background: var(--color-hover-neutral);
			--color: var(--color-text-middle);
		}
	}

	// primary のホバー時の背景色
	.accent {
		&:hover {
			--background: var(--color-hover-neutral);
		}
	}

	// secondary のホバー時の背景色
	.outlined {
		&:hover {
			--background: var(--color-hover-outlined);
		}
	}

	.small {
		padding: var(--space-1) var(--space-2);
		font-size: clamp-size(var(--font-size-xs), var(--font-size-s));
	}

	.medium {
		padding: var(--space-2) var(--space-3);
		font-size: clamp-size(var(--font-size-s), var(--font-size-m));
	}

	.large {
		padding: var(--space-2) var(--space-4);
		font-size: clamp-size(var(--font-size-l), var(--font-size-xl));
	}

	.vertical {
		// デフォルト
		--gap: var(--space-1);

		justify-items: center;
	}

	.horizontal {
		// デフォルト
		--gap: var(--space-3);

		grid-template-columns: auto 1fr;
		grid-auto-flow: column;
		align-items: center;
	}
</style>
