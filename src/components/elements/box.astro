---
import { getPaddingClasses, type PaddingValue } from "@utils/spacing";

interface Props {
  Element?: keyof HTMLElementTagNameMap;
  padding?: PaddingValue;

  // 配置
  surface?: "primary" | "secondary" | "tertiary" | "quaternary" | "accent";

  // ユーティリティ
  [key: string]: unknown;
}

const {
  Element = "div",
  padding,
  surface = "primary",
  ...rest
} = Astro.props as Props;

const classList = [
  "box",
  // surfaceのクラスを追加
  `surface--${surface}`,
  // paddingのクラスを追加
  ...(padding ? getPaddingClasses(padding) : []),
];
---

<Element class:list={classList} {...rest}>
  <slot />
</Element>

<style lang="scss">
  @include element-base("box") {
    // デフォルト
    --padding-top: 0;
    --padding-right: 0;
    --padding-bottom: 0;
    --padding-left: 0;
    --background: transparent;
    --color-text-high: inherit;

    padding: var(--padding-top) var(--padding-right) var(--padding-bottom)
      var(--padding-left);
    background-color: var(--background);
    color: var(--color-text-high);
    outline: 0.125rem solid transparent;
    outline-offset: -0.125rem;

    > :global(*) {
      color: inherit;
    }
  }

  .surface {
    &--primary {
      --background: var(--color-background-primary);
    }

    &--secondary {
      --background: var(--color-background-secondary);
    }

    &--tertiary {
      --background: var(--color-background-tertiary);
    }

    &--quaternary {
      --background: var(--color-background-quaternary);
    }

    &--accent {
      --background: var(--color-background-accent);
      --color-text-high: var(--color-text-primary);
      --color-text-middle: var(--color-text-secondary);
      --color-text-low: var(--color-text-secondary);
    }
  }

  // パディングユーティリティを生成
  @include generate-padding-utilities;
</style>
