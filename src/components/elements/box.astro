---
import { type PaddingValue, paddingClasses } from "@utils/spacing";

interface Props {
	Element?: keyof HTMLElementTagNameMap;
	class?: string;

	// 配置
	surface?: "primary" | "secondary" | "tertiary" | "quaternary" | "accent" | "outlined";
	padding?: PaddingValue;

	// ユーティリティ
	[key: string]: unknown;
}

const {
	Element = "div",
	class: className,
	padding,
	surface,
	...rest
} = Astro.props as Props;

const classList = ["box", surface ? `${surface}` : "", paddingClasses(padding), className];
---

<Element class:list={classList} {...rest}>
	<slot />
</Element>

<style lang="scss">
	.box {
		// デフォルト
		--background: var(--color-background-transparent);
		--color: var(--color-text-middle);
		--border: transparent;
		--pt: var(--space-0);
		--pr: var(--space-0);
		--pb: var(--space-0);
		--pl: var(--space-0);

		padding: var(--pt) var(--pr) var(--pb) var(--pl);
		background: var(--background);
		color: var(--color);
		outline: var(--border-width) solid var(--border);
		outline-offset: calc(var(--border-width) * -1);

		> :global(*) {
			color: inherit;
		}
	}

	.primary {
		--background: var(--color-background-primary);

	}

	.secondary {
		--background: var(--color-background-secondary);
	}

	.tertiary {
		--background: var(--color-background-tertiary);
	}

	.quaternary {
		--background: var(--color-background-quaternary);
	}

	.accent {
		--background: var(--color-background-accent);
		--color: var(--color-text-primary);
	}

	.outlined {
		--background: var(--color-background-primary);
		--border: var(--color-border-low);
		--color: var(--color-text-middle);

	}
</style>
